{
  "openapi": "3.0.0",
  "servers": [
    {
      "description": "SwaggerHub API Auto Mocking",
      "url": "https://stream-orders-api-sandbox.herokuapp.com/client_api/v1/"
    }
  ],
  "info": {
    "description": "This is a simple API",
    "version": "1.0.0",
    "title": "This the the Stream API to be able to create quotes and also place orders on the quotes",
    "contact": {
      "email": "developers@vatitstream.com"
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Used for lookup of information"
    },
    {
      "name": "Flow requests",
      "description": "General flow requests where the logic sits"
    },
    {
      "name": "Static Data",
      "description": "Used for lookup of information"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/sign_in": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create a JWT token for requests",
        "description": "Post in the user name and password credentionals to receive a JWT token to be used for authentication.\nThe token will last for 24 hours after which a new token will need to be generated\n",
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/auth"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/country": {
      "get": {
        "tags": [
          "Static Data"
        ],
        "responses": {
          "200": {
            "description": "fetch all the 'country' items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/country"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency": {
      "get": {
        "tags": [
          "Static Data"
        ],
        "responses": {
          "200": {
            "description": "fetch all the 'currency' items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/currency"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/distance_unit": {
      "get": {
        "tags": [
          "Static Data"
        ],
        "responses": {
          "200": {
            "description": "fetch all the 'distance_unit' items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/distance_unit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mass_unit": {
      "get": {
        "tags": [
          "Static Data"
        ],
        "responses": {
          "200": {
            "description": "fetch all the 'mass_unit' items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mass_unit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purpose_of_shipment": {
      "get": {
        "tags": [
          "Static Data"
        ],
        "responses": {
          "200": {
            "description": "fetch all the 'purpose_of_shipment' items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purpose_of_shipment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/quotes": {
      "get": {
        "tags": [
          "Flow requests"
        ],
        "summary": "Get the quote",
        "operationId": "getQuote",
        "description": "This will return the available pricing options (estimates) for the quote details supplied\n",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/quote"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      },
      "post": {
        "tags": [
          "Flow requests"
        ],
        "summary": "Create a quote",
        "operationId": "createQuote",
        "description": "Create a quote on the system, which will then have several estimates\nassociated to it on which an order can be placed\n",
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/quote"
              }
            }
          },
          "description": "Inventory item to add"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "auth": {
        "type": "object",
        "properties": {
          "api_user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "your_email@example.com"
              },
              "password": {
                "type": "string",
                "example": "secret"
              }
            }
          }
        }
      },
      "country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Serbia"
          },
          "iso_code_2": {
            "type": "string",
            "example": "RS"
          }
        }
      },
      "currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "GBP"
          },
          "name": {
            "type": "string",
            "example": "Pound"
          }
        }
      },
      "dangerous_goods": {
        "required": [
          "un_code"
        ],
        "properties": {
          "un_code": {
            "type": "string",
            "example": "UN3090"
          }
        }
      },
      "distance_unit": {
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "kg"
          }
        }
      },
      "estimate": {
        "type": "object",
        "properties": {
          "shipping_company": {
            "type": "string",
            "example": "FedEx USA"
          },
          "shipping_service": {
            "type": "string",
            "example": "Express Priority"
          },
          "estimate_id": {
            "type": "integer",
            "example": 55788
          },
          "quote_expired": {
            "type": "boolean",
            "example": false
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/line_item"
            }
          },
          "transit_detail": {
            "type": "object",
            "properties": {
              "min_transit_time": {
                "type": "integer",
                "example": 1
              },
              "max_transit_time": {
                "type": "integer",
                "example": 1
              },
              "transit_time_note": {
                "type": "string",
                "example": "clearance delay possible"
              }
            }
          },
          "billable_weight": {
            "type": "object",
            "properties": {
              "metric": {
                "type": "object",
                "properties": {
                  "packages": {
                    "type": "integer",
                    "example": "2,"
                  },
                  "mass_unit": {
                    "type": "string",
                    "example": "kg"
                  },
                  "distance_unit": {
                    "type": "string",
                    "example": "cm"
                  },
                  "volumetric_weight": {
                    "type": "number",
                    "example": 50
                  },
                  "weight": {
                    "type": "number",
                    "example": 100
                  },
                  "billable_weight": {
                    "type": "number",
                    "example": 100
                  }
                }
              },
              "imperial": {
                "type": "object",
                "properties": {
                  "packages": {
                    "type": "integer",
                    "example": 2
                  },
                  "mass_unit": {
                    "type": "string",
                    "example": "lb"
                  },
                  "distance_unit": {
                    "type": "string",
                    "example": "inches"
                  },
                  "volumetric_weight": {
                    "type": "number",
                    "example": 110.231
                  },
                  "weight": {
                    "type": "number",
                    "example": 220.462
                  },
                  "billable_weight": {
                    "type": "number",
                    "example": 220.462
                  }
                }
              }
            }
          }
        }
      },
      "hs_code": {
        "type": "object",
        "required": [
          "code",
          "cost",
          "description",
          "quantity",
          "weight",
          "country_id"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": 100322
          },
          "cost": {
            "type": "string",
            "example": 100
          },
          "description": {
            "type": "string",
            "example": "networking equipment"
          },
          "quantity": {
            "type": "integer",
            "example": 5
          },
          "weight": {
            "type": "number",
            "example": 1.1
          },
          "eccn": {
            "type": "string",
            "format": "5 digit number",
            "example": 12345
          },
          "country_id": {
            "type": "integer",
            "format": "(country of origin of goods)",
            "example": 5
          }
        }
      },
      "line_item": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Fuel Surcharge"
          },
          "cost": {
            "type": "number",
            "example": 469.95
          },
          "invoice_section": {
            "type": "string",
            "example": "Express Rate Fees"
          },
          "currency_id": {
            "type": "string",
            "example": "USD"
          }
        }
      },
      "mass_unit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "cm"
          }
        }
      },
      "package": {
        "type": "object",
        "required": [
          "weight",
          "width",
          "height",
          "length"
        ],
        "properties": {
          "weight": {
            "type": "number",
            "example": 5.5
          },
          "width": {
            "type": "number",
            "example": 5.5
          },
          "height": {
            "type": "number",
            "example": 5.5
          },
          "length": {
            "type": "number",
            "example": 5.5
          }
        }
      },
      "purpose_of_shipment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "Cost Insurance & Freight"
          },
          "code": {
            "type": "string",
            "example": "CIF"
          }
        }
      },
      "quote": {
        "type": "object",
        "required": [
          "origin_country_id",
          "destination_country_id",
          "is_document",
          "is_stackable",
          "purpose_of_shipment_id",
          "is_shipment_protection_required",
          "value_of_goods",
          "value_of_goods_currency_id",
          "mass_unit",
          "distance_unit",
          "iata_approved",
          "packages",
          "dangerous_goods",
          "hs_codes"
        ],
        "properties": {
          "origin_country_id": {
            "type": "integer",
            "example": 1
          },
          "destination_country_id": {
            "type": "integer",
            "example": 2
          },
          "value_of_goods": {
            "type": "string",
            "format": "Money",
            "example": "600.00"
          },
          "value_of_goods_currency_id": {
            "type": "string",
            "format": "3 Digit Currency Code",
            "example": "ZAR"
          },
          "purpose_of_shipment_id": {
            "type": "integer",
            "example": 8
          },
          "is_document": {
            "type": "boolean",
            "example": true
          },
          "is_stackable": {
            "type": "boolean",
            "example": true
          },
          "is_shipment_protection_required": {
            "type": "boolean",
            "example": true
          },
          "dangerous_goods_present": {
            "type": "boolean",
            "example": false
          },
          "distance_unit": {
            "type": "string",
            "format": "cm/in",
            "example": "cm"
          },
          "mass_unit": {
            "type": "string",
            "format": "kg/lb",
            "example": "kg"
          },
          "iata_approved": {
            "type": "boolean",
            "example": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "dangerous_goods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dangerous_goods"
            }
          },
          "hs_codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/hs_code"
            }
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
